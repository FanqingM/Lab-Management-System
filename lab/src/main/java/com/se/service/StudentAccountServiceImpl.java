package com.se.service;

import com.se.entity.AdministratorAccount;
import com.se.entity.StudentAccount;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class StudentAccountServiceImpl implements StudentAccountService{
    @Autowired
    private StudentAccountService studentAccountService;
    public int deleteByPrimaryKey(String id) {
        return studentAccountService.deleteByPrimaryKey(id);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADMINISTRATOR_ACCOUNT
     *
     * @mbg.generated Wed Oct 27 09:24:02 CST 2021
     */
    public int insert(StudentAccount record) {
        return studentAccountService.insert(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADMINISTRATOR_ACCOUNT
     *
     * @mbg.generated Wed Oct 27 09:24:02 CST 2021
     */
    public int insertSelective(StudentAccount record) {
        return studentAccountService.insertSelective(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADMINISTRATOR_ACCOUNT
     *
     * @mbg.generated Wed Oct 27 09:24:02 CST 2021
     */
    public StudentAccount selectByPrimaryKey(String id) {
        return studentAccountService.selectByPrimaryKey(id);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADMINISTRATOR_ACCOUNT
     *
     * @mbg.generated Wed Oct 27 09:24:02 CST 2021
     */
    public int updateByPrimaryKeySelective(StudentAccount record) {
        return studentAccountService.updateByPrimaryKeySelective(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADMINISTRATOR_ACCOUNT
     *
     * @mbg.generated Wed Oct 27 09:24:02 CST 2021
     */
    public int updateByPrimaryKey(StudentAccount record) {
        return studentAccountService.updateByPrimaryKey(record);
    }
}
