package com.se.service;

import com.se.dto.CourseDTO;
import com.se.dto.CourseINO;
import com.se.dto.StudentDTO;
import com.se.entity.Student;
import com.se.entity.StudentAccount;
import com.se.mapper.StudentAccountMapper;
import com.se.mapper.StudentMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class StudentServiceImpl implements StudentService{
    @Autowired
    private StudentMapper studentMapper;
    @Autowired
    private StudentAccountMapper studentAccountMapper;
    @Override
    public int deleteByPrimaryKey(String id) {
        return studentMapper.deleteByPrimaryKey(id);
    }

    @Override
    public List<StudentDTO> selectAllStudents() {
        return studentMapper.selectAllStudents();
    }
    @Override
    public List<CourseDTO> selectAllCourses(CourseINO courseINO) {return studentMapper.selectAllCourses(courseINO);}
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADMINISTRATOR_ACCOUNT
     *
     * @mbg.generated Wed Oct 27 09:24:02 CST 2021
     */
    @Override
    public int insert(Student record) {
        StudentAccount studentAccount = new StudentAccount();
        studentAccount.setEmail(record.getEmail());
        studentAccount.setId(record.getId());
        studentAccount.setPassword(record.getId());
        studentAccountMapper.insert(studentAccount);
        return studentMapper.insert(record);
    }

    @Override
    public int insertManyStudents(List<Student> students) {
        for(int i=0; i<students.size();i++)
        {
            StudentAccount studentAccount = new StudentAccount();
            studentAccount.setEmail(students.get(i).getEmail());
            studentAccount.setId(students.get(i).getId());
            studentAccount.setPassword(students.get(i).getId());
            studentAccountMapper.insert(studentAccount);
            studentMapper.insert(students.get(i));
        }
        return 1;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADMINISTRATOR_ACCOUNT
     *
     * @mbg.generated Wed Oct 27 09:24:02 CST 2021
     */
    @Override
    public int insertSelective(Student record) {
        return studentMapper.insertSelective(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADMINISTRATOR_ACCOUNT
     *
     * @mbg.generated Wed Oct 27 09:24:02 CST 2021
     */
    @Override
    public Student selectByPrimaryKey(String id) {
        return studentMapper.selectByPrimaryKey(id);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADMINISTRATOR_ACCOUNT
     *
     * @mbg.generated Wed Oct 27 09:24:02 CST 2021
     */
    @Override
    public int updateByPrimaryKeySelective(Student record) {
        return studentMapper.updateByPrimaryKeySelective(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADMINISTRATOR_ACCOUNT
     *
     * @mbg.generated Wed Oct 27 09:24:02 CST 2021
     */
    @Override
    public int updateByPrimaryKey(Student record) {
        return studentMapper.updateByPrimaryKey(record);
    }
}
