package com.se.service;

import com.se.dto.LabInstenceDTO;
import com.se.entity.LabInstance;
import com.se.entity.LabInstanceKey;
import com.se.entity.SectionKey;
import com.se.mapper.LabInstanceMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class LabInstanceServiceImpl implements LabInstanceService{
    @Autowired
    private LabInstanceMapper labInstanceMapper;
    @Override
    public int deleteByPrimaryKey(LabInstanceKey key) {
        return labInstanceMapper.deleteByPrimaryKey(key);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADMINISTRATOR_ACCOUNT
     *
     * @mbg.generated Wed Oct 27 09:24:02 CST 2021
     */
    @Override
    public int insert(LabInstance record) {
        return labInstanceMapper.insert(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADMINISTRATOR_ACCOUNT
     *
     * @mbg.generated Wed Oct 27 09:24:02 CST 2021
     */
    @Override
    public int insertSelective(LabInstance record) {
        return labInstanceMapper.insertSelective(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADMINISTRATOR_ACCOUNT
     *
     * @mbg.generated Wed Oct 27 09:24:02 CST 2021
     */
    @Override
    public LabInstance selectByPrimaryKey(LabInstanceKey key) {
        return labInstanceMapper.selectByPrimaryKey(key);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADMINISTRATOR_ACCOUNT
     *
     * @mbg.generated Wed Oct 27 09:24:02 CST 2021
     */
    @Override
    public int updateByPrimaryKeySelective(LabInstance record) {
        return labInstanceMapper.updateByPrimaryKeySelective(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADMINISTRATOR_ACCOUNT
     *
     * @mbg.generated Wed Oct 27 09:24:02 CST 2021
     */
    @Override
    public int updateByPrimaryKey(LabInstance record) {
        return labInstanceMapper.updateByPrimaryKey(record);
    }

    @Override
    public LabInstenceDTO findOne(LabInstanceKey labInstanceKey) {
        return labInstanceMapper.findOne(labInstanceKey);
    }

    @Override
    public List<LabInstenceDTO> findLabInstanceOfSection(SectionKey sectionKey){
        return labInstanceMapper.findLabInstanceOfSection(sectionKey);
    }

}
